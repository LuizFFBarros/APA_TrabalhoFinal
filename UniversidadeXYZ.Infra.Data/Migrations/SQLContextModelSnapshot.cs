// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversidadeXYZ.Infra.Data.Context;

namespace UniversidadeXYZ.Infra.Data.Migrations
{
    [DbContext(typeof(SQLContext))]
    partial class SQLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UniversidadeXYZ.Dominio.Entidades.Disciplina", b =>
                {
                    b.Property<int>("CodigoDisciplina")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CargaHoraria");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("CodigoDisciplina");

                    b.ToTable("Disciplina");

                    b.HasData(
                        new
                        {
                            CodigoDisciplina = 1,
                            CargaHoraria = 32,
                            Nome = "Arquitetura e Desenho de APIs"
                        },
                        new
                        {
                            CodigoDisciplina = 2,
                            CargaHoraria = 24,
                            Nome = "Análise, Projeto e Avaliação de Arquiteturas"
                        },
                        new
                        {
                            CodigoDisciplina = 3,
                            CargaHoraria = 16,
                            Nome = "Arquitetura JEE"
                        },
                        new
                        {
                            CodigoDisciplina = 4,
                            CargaHoraria = 40,
                            Nome = "Arquitetura de Backend e Microsserviços"
                        });
                });

            modelBuilder.Entity("UniversidadeXYZ.Dominio.Entidades.DisciplinaTurma", b =>
                {
                    b.Property<int>("CodigoDisciplina");

                    b.Property<int>("CodigoDaTurma");

                    b.Property<decimal>("QuantidadeVagas");

                    b.HasKey("CodigoDisciplina", "CodigoDaTurma");

                    b.ToTable("DisciplinaTurma");

                    b.HasData(
                        new
                        {
                            CodigoDisciplina = 1,
                            CodigoDaTurma = 1,
                            QuantidadeVagas = 10m
                        },
                        new
                        {
                            CodigoDisciplina = 1,
                            CodigoDaTurma = 2,
                            QuantidadeVagas = 15m
                        },
                        new
                        {
                            CodigoDisciplina = 2,
                            CodigoDaTurma = 2,
                            QuantidadeVagas = 20m
                        },
                        new
                        {
                            CodigoDisciplina = 3,
                            CodigoDaTurma = 3,
                            QuantidadeVagas = 20m
                        });
                });

            modelBuilder.Entity("UniversidadeXYZ.Dominio.Entidades.Matricula", b =>
                {
                    b.Property<int>("CodigoMatricula")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoAluno");

                    b.Property<int>("CodigoDaTurma");

                    b.Property<int>("CodigoDisciplina");

                    b.Property<DateTime>("DataMatricula");

                    b.HasKey("CodigoMatricula");

                    b.HasIndex("CodigoDisciplina", "CodigoDaTurma");

                    b.ToTable("Matricula");

                    b.HasData(
                        new
                        {
                            CodigoMatricula = 1,
                            CodigoAluno = 1,
                            CodigoDaTurma = 1,
                            CodigoDisciplina = 1,
                            DataMatricula = new DateTime(2019, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("UniversidadeXYZ.Dominio.Entidades.DisciplinaTurma", b =>
                {
                    b.HasOne("UniversidadeXYZ.Dominio.Entidades.Disciplina", "Disciplina")
                        .WithMany("DisciplinaTurma")
                        .HasForeignKey("CodigoDisciplina")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversidadeXYZ.Dominio.Entidades.Matricula", b =>
                {
                    b.HasOne("UniversidadeXYZ.Dominio.Entidades.DisciplinaTurma", "DisciplinaTurma")
                        .WithMany("Matricula")
                        .HasForeignKey("CodigoDisciplina", "CodigoDaTurma")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
